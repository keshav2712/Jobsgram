[{"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/index.js":"1","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reportWebVitals.js":"2","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/App.js":"3","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/Register.js":"4","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/Login.js":"5","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/layout/Navbar.js":"6","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/layout/Landing.js":"7","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/store.js":"8","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reducers/index.js":"9","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reducers/authReducers.js":"10","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reducers/errorReducers.js":"11","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/actions/types.js":"12","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/actions/authActions.js":"13","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/utils/setAuthToken.js":"14","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/Dashboard.js":"15","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/private-route/PrivateRoute.js":"16","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/layout/NavbarLogged.js":"17","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/Job.js":"18","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/Jobs.js":"19","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/DetailsA.js":"20","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/DetailsR.js":"21","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/utils/saveUser.js":"22","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/tabs/ProfileA.js":"23","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/tabs/ProfileR.js":"24","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/AddJobs.js":"25","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/JobListings.js":"26","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Job.js":"27","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/EditJob.js":"28","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/applicant/MyApplication.js":"29","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Applications.js":"30","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Applicant.js":"31","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/MyEmployees.js":"32","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Employee.js":"33"},{"size":287,"mtime":1610457469840,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1610407548470,"results":"36","hashOfConfig":"35"},{"size":2604,"mtime":1611246450077,"results":"37","hashOfConfig":"35"},{"size":5763,"mtime":1611115497600,"results":"38","hashOfConfig":"35"},{"size":4117,"mtime":1611115554748,"results":"39","hashOfConfig":"35"},{"size":601,"mtime":1610839745625,"results":"40","hashOfConfig":"35"},{"size":1416,"mtime":1610458217320,"results":"41","hashOfConfig":"35"},{"size":357,"mtime":1610486277708,"results":"42","hashOfConfig":"35"},{"size":207,"mtime":1610486141300,"results":"43","hashOfConfig":"35"},{"size":430,"mtime":1610636033213,"results":"44","hashOfConfig":"35"},{"size":241,"mtime":1610485838184,"results":"45","hashOfConfig":"35"},{"size":127,"mtime":1610627411714,"results":"46","hashOfConfig":"35"},{"size":1949,"mtime":1611126928524,"results":"47","hashOfConfig":"35"},{"size":328,"mtime":1610485998655,"results":"48","hashOfConfig":"35"},{"size":4992,"mtime":1611246507549,"results":"49","hashOfConfig":"35"},{"size":585,"mtime":1610489683489,"results":"50","hashOfConfig":"35"},{"size":240,"mtime":1611127585354,"results":"51","hashOfConfig":"35"},{"size":6826,"mtime":1611352199492,"results":"52","hashOfConfig":"35"},{"size":8816,"mtime":1611348775729,"results":"53","hashOfConfig":"35"},{"size":12994,"mtime":1611326211969,"results":"54","hashOfConfig":"35"},{"size":6738,"mtime":1611186080556,"results":"55","hashOfConfig":"35"},{"size":417,"mtime":1611174243126,"results":"56","hashOfConfig":"35"},{"size":15637,"mtime":1611328022794,"results":"57","hashOfConfig":"35"},{"size":7751,"mtime":1611178753970,"results":"58","hashOfConfig":"35"},{"size":11620,"mtime":1611324747597,"results":"59","hashOfConfig":"35"},{"size":2443,"mtime":1611227678436,"results":"60","hashOfConfig":"35"},{"size":3209,"mtime":1611281938111,"results":"61","hashOfConfig":"35"},{"size":8035,"mtime":1611228720626,"results":"62","hashOfConfig":"35"},{"size":2081,"mtime":1611333149279,"results":"63","hashOfConfig":"35"},{"size":5161,"mtime":1611238465094,"results":"64","hashOfConfig":"35"},{"size":4734,"mtime":1611347923708,"results":"65","hashOfConfig":"35"},{"size":6856,"mtime":1611356892588,"results":"66","hashOfConfig":"35"},{"size":1190,"mtime":1611326060749,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"4t813",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/index.js",[],["146","147"],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reportWebVitals.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/App.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/Register.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/Login.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/layout/Navbar.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/layout/Landing.js",[],["148","149"],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/store.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reducers/index.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reducers/authReducers.js",["150"],"import { SET_CURRENT_USER } from \"../actions/types\";\nconst isEmpty = require(\"is-empty\");\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload.decoded),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/reducers/errorReducers.js",["151"],"import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/actions/types.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/actions/authActions.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/utils/setAuthToken.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/Dashboard.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/private-route/PrivateRoute.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/layout/NavbarLogged.js",["152","153"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass NavbarLogged extends Component {\n\n\n\nonProfile = e => {\n    console.log(this.props.user.state.userData)\n}\n  render() {\n    return (\n      <h1>et</h1>\n    )\n  }\n}\nexport default NavbarLogged;",["154","155"],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/Job.js",["156","157"],"import React, { useState, useEffect } from \"react\";\nimport \"./../../index.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport axios from \"axios\";\n\nfunction Job(props) {\n  const job = props.job;\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n  const [sop, setSop] = useState(\"\");\n  const [buttonValue, setButtonValue] = useState(\"APPLY\");\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (job.applicants.length >= job.applications) {\n      setButtonValue(\"FULL\");\n    }\n    for (var i = 0; i < job.applicants.length; i++) {\n      if (job.applicants[i].id === props.user._id) {\n        setButtonValue(\"APPLIED\");\n        break;\n      }\n    }\n  });\n  const handleClickOpen = () => {\n    getTimes();\n    if (buttonValue === \"APPLY\") {\n      setOpen(true);\n    }\n  };\n  const handleValidation = () => {\n    let error = \"\";\n    let valid = true;\n    if (sop === \"\") {\n      valid = false;\n      error = \"SOP can't be empty\";\n    }\n    if (sop === \"\\n\") {\n      valid = false;\n      error = \"SOP can't be empty\";\n    }\n    if (sop.length > 250) {\n      valid = false;\n      error = \"SOP can't be more than 250 words\";\n    }\n    setError(error);\n    return valid;\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setSop(\"\");\n    setError(\"\");\n  };\n  const apply = (e) => {\n    if (handleValidation()) {\n      const newJob = {\n        id: job._id,\n        applicant: {\n          id: props.user._id,\n          status: \"applied\",\n          sop: sop,\n          dateOfApplication: new Date(),\n        },\n      };\n\n      axios\n        .post(\"api/jobs/addApplicant\", newJob)\n        .then((res) => {\n          console.log(res.data);\n          if (res.data == \"error\") {\n            setOpen(false);\n            setOpen1(true);\n          } else {\n            setButtonValue(\"APPLIED\");\n            setOpen(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  const colors = () => {\n    if (buttonValue === \"APPLIED\") {\n      return \"#26a69a\";\n    } else if (buttonValue === \"FULL\") {\n      return \"#CA0B00\";\n    } else {\n      return \"#5c74ec\";\n    }\n  };\n  const getTimes = () => {\n    var date = new Date(job.deadline);\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    var strTime = hours + \":\" + minutes + \" \" + ampm;\n    return strTime;\n  };\n  const getDates = (date) => {\n    var monthNames = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    var dateObj = new Date(date);\n    return (\n      dateObj.getDate() +\n      \" \" +\n      monthNames[dateObj.getMonth()] +\n      \" \" +\n      dateObj.getFullYear()\n    );\n  };\n  return (\n    <div className=\"card\" style={{ minHeight: \"200px\", maxWidth: \"40vw\" }}>\n      <div className=\"row \" style={{ display: \"flex\" }}>\n        <div className=\"col s8\">\n          <div\n            className=\"card-content black-text\"\n            style={{ paddingRight: \"0\" }}\n          >\n            <span\n              className=\"card-title left-align\"\n              style={{ fontSize: \"22px\", marginBottom: \"0\" }}\n            >\n              <b>Job Title:</b> {job.title}\n            </span>\n            <p className=\"left-align\" style={{ fontSize: \"0.85rem\" }}>\n              By &nbsp;{job.recruiterName}\n            </p>\n            <p className=\"left-align\" style={sty}>\n              <b>Salary:</b> &nbsp;Rs {job.salary}/month\n            </p>\n            <p className=\"left-align\" style={sty}>\n              <b>Duration:</b> &nbsp;\n              {job.duration ? job.duration : \"Indefinite\"}{\" \"}\n              {job.duration ? \"months\" : null}\n            </p>\n            <p className=\"left-align\" style={sty}>\n              <b>Type:</b> &nbsp;{job.typeOfJob}\n            </p>\n            <p className=\"left-align\" style={sty}>\n              <b>Deadline:</b> &nbsp;{getDates(job.deadline)} at {getTimes()}\n            </p>\n          </div>\n        </div>\n        <div className=\"col s4 left-align\" style={{ display: \"grid\" }}>\n          <button\n            className=\"waves-effect waves-light btn-large button\"\n            onClick={handleClickOpen}\n            style={{ margin: \"auto\", backgroundColor: colors() }}\n          >\n            {buttonValue}\n          </button>\n        </div>\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Statement of Purpose</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Write a Statement of Purpose for the Job you are applying to\n          </DialogContentText>\n          <TextField\n            className=\"browser-default\"\n            autoFocus\n            margin=\"dense\"\n            id=\"sop\"\n            label=\"Statement of purpose\"\n            type=\"text\"\n            fullWidth\n            multiline\n            value={sop}\n            rows={1}\n            rowsMax={8}\n            onChange={(e) => {\n              setSop(e.target.value);\n            }}\n          />\n          <span className=\"red-text\" style={{ fontSize: \"0.8rem\" }}>\n            {error}\n          </span>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={apply} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={open1}\n        onClose={() => setOpen1(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Error\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            You cannot have more than 10 open applications\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpen1(false)} color=\"primary\" autoFocus>\n            Okay\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\nconst sty = {\n  padding: \"0.3rem 0\",\n};\nexport default Job;\n","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/Jobs.js",["158","159","160","161"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Job from \"./Job\";\nimport Fuse from \"fuse.js\";\nimport \"./../../index.css\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction Jobs(props) {\n  const [jobs, setJobs] = useState([]);\n  const [filter, setFilter] = useState({\n    search: \"\",\n    recruiterName: \"\",\n    duration: \"7\",\n    typeOfJob: \"\",\n    asc: \"1\",\n    slider: [0, 999],\n    choice: \"salary\",\n    maxs: 0,\n    openApps: 0,\n  });\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios\n      .get(\"api/jobs\")\n      .then((res) => {\n        setJobs(res.data);\n        let maxv = 0,\n          count = 0,\n          id = props.user._id;\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].salary > maxv) maxv = res.data[i].salary;\n          for (let j = 0; j < res.data[i].applicants.length; j++) {\n            if (res.data[i].applicants[j].id == id) {\n              count++;\n            }\n          }\n        }\n        console.log(count);\n        setFilter({\n          ...filter,\n          slider: [filter.slider[0], maxv],\n          maxs: maxv,\n          openApps: count,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props]);\n\n  const printJobs = () => {\n    const fuse = new Fuse(jobs, { keys: [\"title\"] });\n    const results = fuse.search(filter.search);\n    const characterResults = filter.search\n      ? results.map((result) => result.item)\n      : jobs;\n    return characterResults\n      .sort(\n        (job1, job2) =>\n          (job1[filter.choice] - job2[filter.choice]) * parseInt(filter.asc)\n      )\n      .filter(\n        (job) =>\n          job.salary >= filter.slider[0] &&\n          job.salary <= filter.slider[1] &&\n          job.duration < filter.duration &&\n          job.typeOfJob\n            .toLowerCase()\n            .includes(filter.typeOfJob.toLowerCase()) &&\n          new Date() < new Date(job.deadline)\n      )\n      .map((job, i, characterResults) => {\n        if (i % 2 == 0) {\n          return (\n            <div\n              className=\"row\"\n              key={characterResults[i]._id}\n              style={{ display: \"flex\" }}\n            >\n              <div className=\"col s6\">\n                <Job user={props.user} job={characterResults[i]} />\n              </div>\n\n              <div className=\"col s6\">\n                {characterResults[i + 1] ? (\n                  <Job user={props.user} job={characterResults[i + 1]} />\n                ) : null}\n              </div>\n            </div>\n          );\n        }\n      });\n  };\n\n  return (\n    <div className=\"center-align\">\n      <h4\n        className=\"grey-text text-darken-4 header left-align\"\n        style={{ fontFamily: \"Bodoni Moda\", padding: \"10px 0px\" }}\n      >\n        JOB LISTING AVAILABLE\n      </h4>\n      <div className=\"row\">\n        <div className=\"input-field col s10 offset-s1\">\n          <i className=\"material-icons prefix\">search</i>\n          <input\n            id=\"icon_prefix\"\n            value={filter.search}\n            type=\"text\"\n            onChange={(e) => setFilter({ ...filter, search: e.target.value })}\n            style={{ minWidth: \"60vw\" }}\n          />\n          <label htmlFor=\"icon_prefix\">Search for Jobs</label>\n        </div>\n      </div>\n      {filter.search ? null : (\n        <>\n          <p className=\"left-align grey-text text-darken-3\" style={sty}>\n            Sort By:\n          </p>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={filter.choice}\n              onChange={(event) => {\n                setFilter({ ...filter, choice: event.target.value });\n              }}\n            >\n              <MenuItem value=\"salary\">Salary</MenuItem>\n              <MenuItem value=\"duration\">Duration</MenuItem>\n              <MenuItem value=\"rating\">Rating</MenuItem>\n            </Select>\n          </FormControl>\n          <p className=\"grey-text text-darken-3\" style={sty}>\n            in\n          </p>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={filter.asc}\n              onChange={(event) => {\n                setFilter({ ...filter, asc: event.target.value });\n              }}\n            >\n              <MenuItem value=\"1\">Ascending</MenuItem>\n              <MenuItem value=\"-1\">Descending</MenuItem>\n            </Select>\n          </FormControl>\n          <p className=\"grey-text text-darken-3\" style={sty}>\n            Order\n          </p>\n          <fieldset\n            id=\"role\"\n            onChange={(e) => {\n              setFilter({ ...filter, typeOfJob: e.target.value });\n              console.log(filter.openApps);\n            }}\n            style={{ border: 0, display: \"inline-block\", paddingTop: \"35px\" }}\n          >\n            <span className=\"grey-text text-darken-3    \">\n              <b>Job Type:</b>\n            </span>\n            <label style={{ padding: \"0px 40px 0px 40px\" }}>\n              <input\n                className=\"with-gap\"\n                name=\"role\"\n                type=\"radio\"\n                value=\"\"\n                defaultChecked\n              />\n              <span className=\"grey-text text-darken-3\">All</span>\n            </label>\n            <label style={{ paddingRight: \"20px\" }}>\n              <input\n                className=\"with-gap\"\n                name=\"role\"\n                type=\"radio\"\n                value=\"Full-Time\"\n              />\n              <span className=\"grey-text text-darken-3\">Full-Time</span>\n            </label>\n            <label style={{ paddingRight: \"20px\" }}>\n              <input\n                className=\"with-gap\"\n                name=\"role\"\n                type=\"radio\"\n                value=\"Part-Time\"\n              />\n              <span className=\"grey-text text-darken-3\">Part-Time</span>\n            </label>\n            <label>\n              <input\n                className=\"with-gap\"\n                name=\"role\"\n                type=\"radio\"\n                value=\"Work from Home\"\n              />\n              <span className=\"grey-text text-darken-3\">Work from Home</span>\n            </label>\n          </fieldset>\n          <div className=\"row\" style={{ paddingTop: \"20px\" }}>\n            <div className=\"col s1\">\n              <span className=\"grey-text text-darken-3\">\n                <b>Salary:</b>\n              </span>\n            </div>\n            <div className=\"col s2 black-text\">Rs {filter.slider[0]}/month</div>\n            <div className=\"col s6\">\n              <Slider\n                max={filter.maxs}\n                value={filter.slider}\n                onChange={(event, newValue) =>\n                  setFilter({ ...filter, slider: newValue })\n                }\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n              />\n            </div>\n            <div className=\"col s3\">Rs {filter.slider[1]}/month</div>\n          </div>\n          <div className=\"row\">\n            <div\n              className=\"col s3 offset-s2\"\n              style={{ height: \"50px\", paddingTop: \"23px\" }}\n            >\n              <span className=\"grey-text text-darken-3 right-align\">\n                <b>Duration:</b>&emsp; Less than\n              </span>\n            </div>\n            <div className=\"input-field col s1\">\n              <FormControl className={classes.formControl}>\n                <Select\n                  value={filter.duration}\n                  onChange={(event) => {\n                    setFilter({ ...filter, duration: event.target.value });\n                  }}\n                >\n                  <MenuItem value=\"1\">1</MenuItem>\n                  <MenuItem value=\"2\">2</MenuItem>\n                  <MenuItem value=\"3\">3</MenuItem>\n                  <MenuItem value=\"4\">4</MenuItem>\n                  <MenuItem value=\"5\">5</MenuItem>\n                  <MenuItem value=\"6\">6</MenuItem>\n                  <MenuItem value=\"7\">7</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n            <div\n              className=\"col s3\"\n              style={{ height: \"50px\", paddingTop: \"23px\" }}\n            >\n              <span className=\"grey-text text-darken-3 left-align\">months</span>\n            </div>\n          </div>\n        </>\n      )}\n      {printJobs()}\n    </div>\n  );\n}\nconst sty = {\n  width: \"120px\",\n  display: \"inline-block\",\n};\nexport default Jobs;\n","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/DetailsA.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/auth/DetailsR.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/utils/saveUser.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/tabs/ProfileA.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/tabs/ProfileR.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/dashboard/AddJobs.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/JobListings.js",["162"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Job from \"./Job\";\n\nexport default function JobListings(props) {\n  const user = props.location.state.detail;\n  const [jobs, setJobs] = useState([]);\n\n  useEffect(() => {\n    let isMounted = true;\n    axios\n      .post(\"api/recruiter\", user)\n      .then((res) => {\n        if (isMounted) {\n          setJobs(res.data.jobsCreated);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"Navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper\" style={{ backgroundColor: \"#2E284C\" }}>\n            <div\n              style={{\n                fontFamily: \"monospace\",\n                fontColor: \"#F0F1F7\",\n              }}\n              className=\"col s5 brand-logo center\"\n            >\n              <i className=\"material-icons\">work</i>\n              JOBSGRAM\n            </div>\n            <div className=\"left\" style={{ paddingLeft: \"20px\" }}>\n              <button\n                style={{\n                  width: \"100px\",\n                  letterSpacing: \"1.5px\",\n                  backgroundColor: \"#2E284C\",\n                }}\n                onClick={(e) => {\n                  props.history.push(\"/dashboard\");\n                }}\n                className=\"btn btn-medium\"\n              >\n                Home\n              </button>\n            </div>\n          </div>\n        </nav>\n      </div>\n      <div className=\"container valign-wrapper\" style={{ width: \"80%\" }}>\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <div className=\"container\" style={{ margin: \"0\" }}>\n              <div\n                className=\"row\"\n                style={{ width: \"500px\", marginTop: \"2rem\" }}\n              >\n                <div className=\"col s11 offset-s1\">\n                  <h4 className=\"grey-text text-darken-4 header left-align\">\n                    <b>Jobs Listed</b> by you\n                  </h4>\n                </div>\n              </div>\n              {jobs.map((job) => (\n                <Job\n                  key={job._id}\n                  job={job}\n                  user={user}\n                  history={props.history}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Job.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/EditJob.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/applicant/MyApplication.js",["163","164"],"import React, { useState, useEffect } from \"react\";\n\nexport default function MyApplication(props) {\n  const userData = props.location.state.detail;\n  return (\n    <React.Fragment>\n      <div className=\"Navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper\" style={{ backgroundColor: \"#2E284C\" }}>\n            <div\n              style={{\n                fontFamily: \"monospace\",\n                fontColor: \"#F0F1F7\",\n              }}\n              className=\"col s5 brand-logo center\"\n            >\n              <i className=\"material-icons\">work</i>\n              JOBSGRAM\n            </div>\n            <ul id=\"nav-mobile\" className=\"left\">\n              <li>\n                <div\n                  className=\"btn navb\"\n                  onClick={(e) => {\n                    props.history.push({\n                      pathname: \"/profilea\",\n                      state: { detail: userData },\n                    });\n                  }}\n                >\n                  Profile\n                </div>\n              </li>\n              <li>\n                <div\n                  className=\"btn navb\"\n                  onClick={(e) => {\n                    props.history.push(\"/dashboard\");\n                  }}\n                >\n                  Home\n                </div>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      <div className=\"container valign-wrapper\" style={{ width: \"80%\" }}>\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <div className=\"container\" style={{ margin: \"0\" }}>\n              <div\n                className=\"row\"\n                style={{ width: \"500px\", marginTop: \"2rem\" }}\n              >\n                <div className=\"col s10 offset-s1\">\n                  <h4 className=\"grey-text text-darken-4 header left-align \">\n                    Your <b>APPLICATIONS</b>\n                  </h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Applications.js",[],"/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Applicant.js",["165"],"import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nexport default function Applicant(props) {\n  const [status, setStatus] = useState(props.applicant.status);\n  const applicant = props.applicant.id;\n  useEffect(() => {\n    let isMounted = true;\n    let newJob = {\n      _id: props.job._id,\n      applicant: {\n        id: applicant._id,\n      },\n    };\n    axios\n      .post(\"api/jobs/updateStatus\", newJob)\n      .then((res) => {\n        if (isMounted) {\n          setStatus(res.data.status);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return () => {\n      isMounted = false;\n    };\n  }, [status]);\n\n  const printSkills = () => {\n    let skills = \"\";\n    for (let i = 0; i < applicant.skills.length - 1; i++) {\n      skills += applicant.skills[i] + \", \";\n    }\n    skills += applicant.skills[applicant.skills.length - 1];\n    return skills;\n  };\n  const onReject = () => {\n    if (status !== \"accepted\") {\n      const newJob = {\n        _id: props.job._id,\n        applicant: {\n          status: \"rejected\",\n          id: applicant._id,\n        },\n      };\n      axios\n        .post(\"api/jobs/updateStatus\", newJob)\n        .then((res) => {\n          console.log(res.data);\n          setStatus(\"rejected\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  const onClick = () => {\n    if (status === \"applied\") {\n      const newJob = {\n        _id: props.job._id,\n        applicant: {\n          status: \"shortlisted\",\n          id: applicant._id,\n        },\n      };\n      axios\n        .post(\"api/jobs/updateStatus\", newJob)\n        .then((res) => {\n          console.log(res.data);\n          setStatus(\"shortlisted\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      const newJob = {\n        _id: props.job._id,\n        applicant: {\n          status: \"accepted\",\n          id: applicant._id,\n          dateOfJoining: new Date(),\n        },\n      };\n      axios\n        .post(\"api/jobs/updateStatus\", newJob)\n        .then((res) => {\n          console.log(res.data);\n          setStatus(\"accepted\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  const colors = () => {\n    if (status === \"applied\") {\n      return \"#5c74ec\";\n    } else if (status === \"shortlisted\") {\n      return \"#26a69a\";\n    } else {\n      return \"green\";\n    }\n  };\n  return status === \"rejected\" ? null : (\n    <div className=\"card\" style={{ minHeight: \"200px\", minWidth: \"80vw\" }}>\n      <div className=\"row\">\n        <div className=\"col s8\">\n          <div className=\"card-content black-text\">\n            <span\n              className=\"card-title left-align\"\n              style={{ fontSize: \"22px\" }}\n            >\n              <b>Name:</b>&nbsp; {applicant.name}\n            </span>\n            <p className=\"left-align\" style={sty}>\n              <b>Skills:</b> &nbsp;{printSkills(applicant.skills)}\n            </p>\n            <p className=\"left-align\" style={sty}>\n              <b>Date of Application:</b> &nbsp;\n              {moment(props.applicant.dateOfApplication).format(\"ll\")}\n            </p>\n            <p className=\"left-align\" style={sty}>\n              <b>SOP:</b> &nbsp;{props.applicant.sop}\n            </p>\n            <p className=\"left-align\" style={sty}>\n              <b>Education:</b> &nbsp;\n              {applicant.education.map((education) => {\n                return (\n                  <span key={education._id}>\n                    {education.institutionName} ({education.startYear}-\n                    {education.endYear})\n                    <br />\n                  </span>\n                );\n              })}\n            </p>\n          </div>\n        </div>\n        <div className=\"col s1\" style={{ height: \"200px\", display: \"grid\" }}>\n          <button\n            className=\"waves-effect waves-light btn-large button\"\n            onClick={onClick}\n            style={{ margin: \"auto\", backgroundColor: colors() }}\n          >\n            {status === \"applied\"\n              ? \"SHORTLIST\"\n              : status === \"shortlisted\"\n              ? \"ACCEPT\"\n              : \"ACCEPTED\"}\n          </button>\n        </div>\n        {status === \"accepted\" ? null : (\n          <div className=\"col s3\" style={{ height: \"200px\", display: \"grid\" }}>\n            <button\n              className=\"waves-effect waves-light btn-large button\"\n              onClick={onReject}\n              style={{ margin: \"auto\", backgroundColor: \"#CA0B00\" }}\n            >\n              REJECT\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst sty = {\n  padding: \"0.3rem 0\",\n};\n","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/MyEmployees.js",["166","167","168"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Employee from \"./Employee\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function MyEmployees(props) {\n  const user = props.location.state.detail;\n  const [employees, setEmployees] = useState([]);\n  const [filter, setFilter] = useState({ choice: \"name\", asc: \"1\" });\n  const classes = useStyles();\n\n  useEffect(() => {\n    let isMounted = true;\n    axios\n      .post(\"api/recruiter\", user)\n      .then((res) => {\n        if (isMounted) {\n          var jobs = res.data.jobsCreated;\n          for (let i = 0; i < jobs.length; i++) {\n            for (let j = 0; j < jobs[i].applicants.length; j++) {\n              if (jobs[i].applicants[j].status === \"accepted\") {\n                setEmployees((employees) => [\n                  ...employees,\n                  {\n                    name: jobs[i].applicants[j].id.name,\n                    userId: jobs[i].applicants[j].id._id,\n                    dateOfJoining: jobs[i].applicants[j].dateOfJoining,\n                    typeOfJob: jobs[i].typeOfJob,\n                    title: jobs[i].title,\n                  },\n                ]);\n              }\n            }\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <div className=\"Navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper\" style={{ backgroundColor: \"#2E284C\" }}>\n            <div\n              style={{\n                fontFamily: \"monospace\",\n                fontColor: \"#F0F1F7\",\n              }}\n              className=\"col s5 brand-logo center\"\n            >\n              <i className=\"material-icons\">work</i>\n              JOBSGRAM\n            </div>\n            <div className=\"left\" style={{ paddingLeft: \"20px\" }}>\n              <button\n                style={{\n                  width: \"100px\",\n                  letterSpacing: \"1.5px\",\n                  backgroundColor: \"#2E284C\",\n                }}\n                onClick={(e) => {\n                  props.history.push(\"/dashboard\");\n                }}\n                className=\"btn btn-medium\"\n              >\n                Home\n              </button>\n            </div>\n          </div>\n        </nav>\n      </div>\n      <div className=\"container valign-wrapper\" style={{ width: \"80%\" }}>\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <div className=\"row\" style={{ width: \"500px\", marginTop: \"2rem\" }}>\n              <div className=\"col s11 offset-s1\">\n                <h4 className=\"grey-text text-darken-4 header left-align\">\n                  <b>Employees</b> hired by you\n                </h4>\n              </div>\n            </div>\n            <div\n              className=\"row center-align\"\n              style={{ marginBottom: \"1.6rem\", minWidth: \"80vw\" }}\n            >\n              <div className=\"col s12 center-align\">\n                <p className=\"left-align grey-text text-darken-3\" style={sty}>\n                  Sort By:\n                </p>\n                <FormControl className={classes.formControl}>\n                  <Select\n                    value={filter.choice}\n                    onChange={(event) => {\n                      setFilter({ ...filter, choice: event.target.value });\n                    }}\n                  >\n                    <MenuItem value=\"name\">Name</MenuItem>\n                    <MenuItem value=\"title\">Job Title</MenuItem>\n                    <MenuItem value=\"dateOfJoining\">Joining Date</MenuItem>\n                    <MenuItem value=\"rating\">Rating</MenuItem>\n                  </Select>\n                </FormControl>\n                <p className=\"grey-text text-darken-3\" style={sty}>\n                  in\n                </p>\n                <FormControl className={classes.formControl}>\n                  <Select\n                    value={filter.asc}\n                    onChange={(event) => {\n                      setFilter({ ...filter, asc: event.target.value });\n                    }}\n                  >\n                    <MenuItem value=\"1\">Ascending</MenuItem>\n                    <MenuItem value=\"-1\">Descending</MenuItem>\n                  </Select>\n                </FormControl>\n                <p className=\"grey-text text-darken-3\" style={sty}>\n                  Order\n                </p>\n              </div>\n            </div>\n            {employees\n              .sort((employees1, employees2) => {\n                if (filter.choice === \"dateOfJoining\")\n                  return (\n                    (new Date(employees1[\"dateOfJoining\"]) -\n                      new Date(employees2[\"dateOfJoining\"])) *\n                    parseInt(filter.asc)\n                  );\n                else if (\n                  filter.choice === \"name\" ||\n                  filter.choice === \"title\"\n                ) {\n                  return (\n                    employees1[filter.choice]\n                      .split(\" \")[0]\n                      .localeCompare(employees2[filter.choice].split(\" \")[0]) *\n                    parseInt(filter.asc)\n                  );\n                } else {\n                  return (\n                    (employees1.rating - employees2.rating) *\n                    parseInt(filter.asc)\n                  );\n                }\n              })\n              .map((employee, i, employees) => {\n                if (i % 3 == 0) {\n                  return (\n                    <div\n                      className=\"row\"\n                      key={employees[i].userId}\n                      style={{ display: \"flex\" }}\n                    >\n                      <div className=\"col s4\">\n                        <Employee employee={employees[i]} />\n                      </div>\n                      <div className=\"col s4\">\n                        {employees[i + 1] ? (\n                          <Employee employee={employees[i + 1]} />\n                        ) : null}\n                      </div>\n                      <div className=\"col s4\">\n                        {employees[i + 2] ? (\n                          <Employee employee={employees[i + 2]} />\n                        ) : null}\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nconst sty = {\n  width: \"120px\",\n  display: \"inline-block\",\n};\n","/home/keshav/Documents/Acads/Spring 2021/DASS/2019115010/frontend/src/components/recruiter/Employee.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"169","replacedBy":"173"},{"ruleId":"171","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":7,"column":1,"nodeType":"177","endLine":18,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":3,"column":1,"nodeType":"177","endLine":10,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"178","severity":1,"message":"182","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":20},{"ruleId":"169","replacedBy":"183"},{"ruleId":"171","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":20,"column":3,"nodeType":"180","endLine":20,"endColumn":12,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":76,"column":24,"nodeType":"190","messageId":"191","endLine":76,"endColumn":26},{"ruleId":"188","severity":1,"message":"189","line":48,"column":46,"nodeType":"190","messageId":"191","endLine":48,"endColumn":48},{"ruleId":"185","severity":1,"message":"192","line":64,"column":6,"nodeType":"193","endLine":64,"endColumn":13,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":87,"column":39,"nodeType":"197","messageId":"198","endLine":87,"endColumn":41},{"ruleId":"188","severity":1,"message":"189","line":88,"column":19,"nodeType":"190","messageId":"191","endLine":88,"endColumn":21},{"ruleId":"185","severity":1,"message":"199","line":24,"column":6,"nodeType":"193","endLine":24,"endColumn":8,"suggestions":"200"},{"ruleId":"178","severity":1,"message":"201","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"202","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"203","line":29,"column":6,"nodeType":"193","endLine":29,"endColumn":14,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"199","line":56,"column":6,"nodeType":"193","endLine":56,"endColumn":8,"suggestions":"205"},{"ruleId":"195","severity":1,"message":"196","line":166,"column":45,"nodeType":"197","messageId":"198","endLine":166,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":167,"column":27,"nodeType":"190","messageId":"191","endLine":167,"endColumn":29},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],["206"],["207"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logoutUser' is defined but never used.",["206"],["207"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setButtonValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [job.applicants, job.applications, props.user._id] as a second argument to the useEffect Hook.",["208"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array. You can also do a functional update 'setFilter(f => ...)' if you only need 'filter' in the 'setFilter' call.","ArrayExpression",["209"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["210"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'applicant._id' and 'props.job._id'. Either include them or remove the dependency array.",["211"],["212"],"no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"217","fix":"221"},"Add dependencies array: [job.applicants, job.applications, props.user._id]",{"range":"222","text":"223"},"Update the dependencies array to be: [filter, props]",{"range":"224","text":"225"},"Update the dependencies array to be: [user]",{"range":"226","text":"227"},"Update the dependencies array to be: [applicant._id, props.job._id, status]",{"range":"228","text":"229"},{"range":"230","text":"227"},[1073,1073],", [job.applicants, job.applications, props.user._id]",[1626,1633],"[filter, props]",[550,552],"[user]",[685,693],"[applicant._id, props.job._id, status]",[1699,1701]]